{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAYe,SAAW,CACnBd,cAAee,IAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAa,IAAD,EAEXlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAiBrC,OAVCC,qBAAW,WACRxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGrB,CAACpB,IAEEqB,EDd0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADAA,EAAIC,aEWlBgB,EAxBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,cAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,gCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEQ+C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1e63acde.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {            \r\n            setcategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (    \r\n        <form onSubmit={handleSubmit}>\r\n                \r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propType = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=yJvn6gDG1iEHZnnXWTH5xCYW0ZloAJgZ`    \r\n    const resp =await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,                \r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);       \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3> \r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">                       \r\n                {images.map( img => \r\n                    <GifGridItem\r\n                        key={img.id} \r\n                        { ...img } \r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n     useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs=> {                \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })                           \r\n            })\r\n     }, [category]) \r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n\r\n            <AddCategory setcategories={ setcategories } />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n\n\n\n"],"sourceRoot":""}